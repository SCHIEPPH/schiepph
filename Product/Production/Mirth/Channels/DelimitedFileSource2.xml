<channel>
  <id>fbb444ad-4421-4d5a-bb2b-dc14793d56a4</id>
  <name>DelimitedFileSource</name>
  <description></description>
  <enabled>true</enabled>
  <version>2.1.1.5490</version>
  <lastModified>
    <time>1324053973709</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>254</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">File Reader</property>
      <property name="FTPAnonymous">1</property>
      <property name="autoDelete">0</property>
      <property name="binary">0</property>
      <property name="charsetEncoding">DEFAULT_ENCODING</property>
      <property name="checkFileAge">1</property>
      <property name="fileAge">1000</property>
      <property name="fileFilter">${DELIMITED_SENDER_FILENAME_PATTERN}</property>
      <property name="host">${DELIMITED_SENDER_SOURCE_DIR}</property>
      <property name="moveToDirectory">${DELIMITED_SENDER_PROCESSED_DIR}</property>
      <property name="moveToErrorDirectory">${DELIMITED_SENDER_ERROR_DIR}</property>
      <property name="moveToPattern">${ORIGINALNAME}</property>
      <property name="passive">1</property>
      <property name="password">anonymous</property>
      <property name="pollingFrequency">1000</property>
      <property name="pollingType">interval</property>
      <property name="processBatchFiles">0</property>
      <property name="regex">0</property>
      <property name="scheme">file</property>
      <property name="secure">1</property>
      <property name="sortAttribute">date</property>
      <property name="timeout">10000</property>
      <property name="username">anonymous</property>
      <property name="validateConnections">1</property>
    </properties>
    <transformer>
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>New Step</name>
          <script>var raw = messageObject.getRawData();

var delimiter =globalMap.get(&apos;DELIMITED_SENDER_DELIMITER&apos;);

var lines = raw.split(/\r\n|\r|\n/); 

var value = lines[0].split(&apos;=&apos;);

if(value[1] != null)
{
	delimiter = value[1].trim();
	raw = messageObject.getRawData().replace(lines[0], &apos;&apos;);
}


logger.info(&apos;global delimiter = &apos; + globalMap.get(&apos;DELIMITED_SENDER_DELIMITER&apos;));


logger.info(&apos;delimiter - &apos; + delimiter);

var updatedLines = raw.split(/\r\n|\r|\n/); 

for (x in updatedLines)
{

	updatedLine = new java.lang.String(updatedLines[x]).trim();
	if ( updatedLine != &apos;&apos;)
	{
		line = updatedLines[x].split(delimiter);
		for (y in line)
		{
			if(y &lt; 18)
			{
				logger.info(&apos;Line Item &apos; + y + &apos; = &apos; + line[y]);
			}
		}
		tmp[&apos;MSH&apos;][&apos;MSH.10&apos;]  = &apos;kieran &apos; + globalMap.get(&apos;DELIMITED_SENDER_SENDERID&apos;);

		tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;TS.1&apos;] =  &apos;&apos;;
		tmp[&apos;OBX&apos;][0][&apos;OBX.15&apos;][&apos;CE.1&apos;] = line[0];
		tmp[&apos;OBX&apos;][1][&apos;OBX.5&apos;] = line[1];
		tmp[&apos;OBX&apos;][2][&apos;OBX.5&apos;] = &apos;^&apos; + line[2] + &apos;^^^^&apos; + line[3] + &apos;^&apos; + line[4] + &apos;^^^C^^&apos; + line[5];
		tmp[&apos;OBX&apos;][3][&apos;OBX.5&apos;] = line[6];
		tmp[&apos;EVN&apos;][&apos;EVN.2&apos;][&apos;TS.1&apos;] = line[7];
		tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;CX.1&apos;] = line[8];
		tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;CX.1&apos;] = line[9];

		//Age and Age Units
		tmp[&apos;OBX&apos;][4][&apos;OBX.5&apos;] = line[10];
		tmp[&apos;OBX&apos;][4][&apos;OBX.6&apos;][&apos;CE.2&apos;] = line[11];
		
		tmp[&apos;PID&apos;][&apos;PID.8&apos;] = line [12];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.3&apos;] = line [13];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.5&apos;] = line [14];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.4&apos;] = line [15];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.6&apos;] = line [16];
		tmp[&apos;PID&apos;][&apos;PID.10&apos;][&apos;CE.1&apos;]  = line [17];
		tmp[&apos;PID&apos;][&apos;PID.22&apos;][&apos;CE.1&apos;] = line [18]; // Need to do a look up for coded value. 
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.9&apos;] = line [19];		
		tmp[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;CX.1&apos;] = line[20];
		tmp[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;TS.1&apos;] = line[21];
		tmp[&apos;OBX&apos;][5][&apos;OBX.5&apos;] = line[22];
		tmp[&apos;PV1&apos;][&apos;PV1.2&apos;] = line [23];
		tmp[&apos;OBX&apos;][6][&apos;OBX.5&apos;] = &apos;^^^^^^^^&apos; + line[24];
		tmp[&apos;OBX&apos;][7][&apos;OBX.5&apos;] = line[25];
		tmp[&apos;DG1&apos;][&apos;DG1.3&apos;][&apos;CE.2&apos;] = line[26];

		tmp[&apos;OBX&apos;][8][&apos;OBX.5&apos;] = line[27];
		tmp[&apos;DG1&apos;][&apos;DG1.6&apos;] = line [28];
		tmp[&apos;PV1&apos;][&apos;PV1.36&apos;] = line[29];
		tmp[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;TS.1&apos;] = line[30];
		
		tmp[&apos;OBX&apos;][9][&apos;OBX.5&apos;] = line[31];
		tmp[&apos;OBX&apos;][9][&apos;OBX.6&apos;][&apos;CE.2&apos;] = line[32];
		tmp[&apos;OBX&apos;][10][&apos;OBX.5&apos;] =  line[33];
		tmp[&apos;OBX&apos;][10][&apos;OBX.6&apos;][&apos;CE.2&apos;] = line[34];
    }

}


channelMap.put(&apos;data&apos;,tmp);</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>var raw = messageObject.getRawData();

var delimiter =globalMap.get(&apos;DELIMITED_SENDER_DELIMITER&apos;);

var lines = raw.split(/\r\n|\r|\n/); 

var value = lines[0].split(&apos;=&apos;);

if(value[1] != null)
{
	delimiter = value[1].trim();
	raw = messageObject.getRawData().replace(lines[0], &apos;&apos;);
}


logger.info(&apos;global delimiter = &apos; + globalMap.get(&apos;DELIMITED_SENDER_DELIMITER&apos;));


logger.info(&apos;delimiter - &apos; + delimiter);

var updatedLines = raw.split(/\r\n|\r|\n/); 

for (x in updatedLines)
{

	updatedLine = new java.lang.String(updatedLines[x]).trim();
	if ( updatedLine != &apos;&apos;)
	{
		line = updatedLines[x].split(delimiter);
		for (y in line)
		{
			if(y &lt; 18)
			{
				logger.info(&apos;Line Item &apos; + y + &apos; = &apos; + line[y]);
			}
		}
		tmp[&apos;MSH&apos;][&apos;MSH.10&apos;]  = &apos;kieran &apos; + globalMap.get(&apos;DELIMITED_SENDER_SENDERID&apos;);

		tmp[&apos;MSH&apos;][&apos;MSH.7&apos;][&apos;TS.1&apos;] =  &apos;&apos;;
		tmp[&apos;OBX&apos;][0][&apos;OBX.15&apos;][&apos;CE.1&apos;] = line[0];
		tmp[&apos;OBX&apos;][1][&apos;OBX.5&apos;] = line[1];
		tmp[&apos;OBX&apos;][2][&apos;OBX.5&apos;] = &apos;^&apos; + line[2] + &apos;^^^^&apos; + line[3] + &apos;^&apos; + line[4] + &apos;^^^C^^&apos; + line[5];
		tmp[&apos;OBX&apos;][3][&apos;OBX.5&apos;] = line[6];
		tmp[&apos;EVN&apos;][&apos;EVN.2&apos;][&apos;TS.1&apos;] = line[7];
		tmp[&apos;PID&apos;][&apos;PID.2&apos;][&apos;CX.1&apos;] = line[8];
		tmp[&apos;PID&apos;][&apos;PID.3&apos;][&apos;CX.1&apos;] = line[9];

		//Age and Age Units
		tmp[&apos;OBX&apos;][4][&apos;OBX.5&apos;] = line[10];
		tmp[&apos;OBX&apos;][4][&apos;OBX.6&apos;][&apos;CE.2&apos;] = line[11];
		
		tmp[&apos;PID&apos;][&apos;PID.8&apos;] = line [12];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.3&apos;] = line [13];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.5&apos;] = line [14];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.4&apos;] = line [15];
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.6&apos;] = line [16];
		tmp[&apos;PID&apos;][&apos;PID.10&apos;][&apos;CE.1&apos;]  = line [17];
		tmp[&apos;PID&apos;][&apos;PID.22&apos;][&apos;CE.1&apos;] = line [18]; // Need to do a look up for coded value. 
		tmp[&apos;PID&apos;][&apos;PID.11&apos;][&apos;XAD.9&apos;] = line [19];		
		tmp[&apos;PV1&apos;][&apos;PV1.19&apos;][&apos;CX.1&apos;] = line[20];
		tmp[&apos;PV1&apos;][&apos;PV1.44&apos;][&apos;TS.1&apos;] = line[21];
		tmp[&apos;OBX&apos;][5][&apos;OBX.5&apos;] = line[22];
		tmp[&apos;PV1&apos;][&apos;PV1.2&apos;] = line [23];
		tmp[&apos;OBX&apos;][6][&apos;OBX.5&apos;] = &apos;^^^^^^^^&apos; + line[24];
		tmp[&apos;OBX&apos;][7][&apos;OBX.5&apos;] = line[25];
		tmp[&apos;DG1&apos;][&apos;DG1.3&apos;][&apos;CE.2&apos;] = line[26];

		tmp[&apos;OBX&apos;][8][&apos;OBX.5&apos;] = line[27];
		tmp[&apos;DG1&apos;][&apos;DG1.6&apos;] = line [28];
		tmp[&apos;PV1&apos;][&apos;PV1.36&apos;] = line[29];
		tmp[&apos;PV1&apos;][&apos;PV1.45&apos;][&apos;TS.1&apos;] = line[30];
		
		tmp[&apos;OBX&apos;][9][&apos;OBX.5&apos;] = line[31];
		tmp[&apos;OBX&apos;][9][&apos;OBX.6&apos;][&apos;CE.2&apos;] = line[32];
		tmp[&apos;OBX&apos;][10][&apos;OBX.5&apos;] =  line[33];
		tmp[&apos;OBX&apos;][10][&apos;OBX.6&apos;][&apos;CE.2&apos;] = line[34];
    }

}


channelMap.put(&apos;data&apos;,tmp);</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64">SUQxMjM0O0ZhaXJmYXggSU5PVkEgSG9zcGl0YWw7MTIzNCBHYWxsb3dzIFJkLjtGYWlyZmF4O1ZB
O0ZvbGxvdyBVcCBWaXNpdDsgMTUgTm92ZW1iZXIgMjAxMSAxMjo0NSBQTTsxMjIzMzM0NDQ0NTU1
NTU7MTExMTEyMjIyMzMzNDQ1OzQyO1llYXJzO007U3ByaW5nZmllbGQ7MjIxNTA7VkE7VVNBO0Nh
dWNhc2lhbjs7RmFpcmZheDtBQkMxMjM7MTAgTm92ZW1iZXIgMjAxMSA5OjMyIEFNOzggTm92ZW1i
ZXIgMjAxMTs7VXBzZXQgU3RvbWFjaDtQYXRpZW50IG1pZHNlY3Rpb24gaXMgdGVuZGVyIHRvIHRo
ZSB0b3VjaC4gIE5vIGZldmVyLjsxNDc1MjI7O1ByZWxpbWluYXJ5IERpYWdub3NpcztEaXNjaGFy
Z2VkOzExIE5vdmVtYmVyIDIwMTEgNjozMCBQTTs5OC43O1tkZWdGXTs2NTslDQo=</inboundTemplate>
      <outboundTemplate encoding="base64">PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPEFEVF9BMDE+CiAgPE1TSD4K
ICAgIDxNU0guMT58PC9NU0guMT4KICAgIDxNU0guMj5eflwmYW1wOzwvTVNILjI+CiAgICA8TVNI
Ljc+CiAgICAgIDxUUy4xPiR7U1lTVElNRX08L1RTLjE+CiAgICA8L01TSC43PgogICAgPE1TSC45
PgogICAgICA8TVNHLjE+QURUPC9NU0cuMT4KICAgICAgPE1TRy4yPkEwMTwvTVNHLjI+CiAgICA8
L01TSC45PgogICAgPE1TSC4xMD4ke3NlbmRlcl9pZH08L01TSC4xMD4KICAgIDxNU0guMTE+CiAg
ICAgIDxQVC4xPlA8L1BULjE+CiAgICA8L01TSC4xMT4KICAgIDxNU0guMTI+CiAgICAgIDxWSUQu
MT4yLjMuMTwvVklELjE+CiAgICA8L01TSC4xMj4KICAgIDxNU0guMTg+VVRGLTg8L01TSC4xOD4K
ICA8L01TSD4KICA8RVZOPgogICAgPEVWTi4yPgogICAgICA8VFMuMT4kezhfcmVwb3J0X2RhdGVf
dGltZX08L1RTLjE+CiAgICA8L0VWTi4yPgogIDwvRVZOPgogIDxQSUQ+CiAgICA8UElELjE+MTwv
UElELjE+CiAgICA8UElELjI+CiAgICAgIDxDWC4xPjwvQ1guMT4KICAgICAgPENYLjU+UEk8L0NY
LjU+CiAgICA8L1BJRC4yPgogICAgPFBJRC4zPgogICAgICA8Q1guMT4kezEwX21lZGljYWxfcmVj
b3JkX251bWJlcn08L0NYLjE+CiAgICA8L1BJRC4zPgogICAgPFBJRC41PgogICAgICA8WFBOLjE+
CiAgICAgICAgPEZOLjE+PC9GTi4xPgogICAgICA8L1hQTi4xPgogICAgPC9QSUQuNT4KICAgIDxQ
SUQuOD4kezEzX2dlbmRlcn08L1BJRC44PgogICAgPFBJRC4xMD4KICAgICAgPENFLjE+JHsxOF9w
YWl0ZW50X3JhY2V9PC9DRS4xPgogICAgPC9QSUQuMTA+CiAgICA8UElELjExPgogICAgICA8WEFE
LjM+JHsxNF9wYWl0ZW50X2NpdHl9PC9YQUQuMz4KICAgICAgPFhBRC40PiR7MTZfcGF0aWVudF9z
dGF0ZX08L1hBRC40PgogICAgICA8WEFELjU+JHsxNV9wYWl0ZW50X3ppcF9jb2RlfTwvWEFELjU+
CiAgICAgIDxYQUQuNj4kezE3X3BhaXRlbnRfY291bnRyeX08L1hBRC42PgogICAgICA8WEFELjk+
JHsyMF9wYWl0ZW50X2NvdW50eX08L1hBRC45PgogICAgPC9QSUQuMTE+CiAgICA8UElELjIyPgog
ICAgICA8Q0UuMT4kezE5X3BhaXRlbnRfZXRobmljaXR5fTwvQ0UuMT4KICAgIDwvUElELjIyPgog
IDwvUElEPgogIDxQVjE+CiAgICA8UFYxLjI+JHsyNF9wYWl0ZW50X2NsYXNzfTwvUFYxLjI+CiAg
ICA8UFYxLjE5PgogICAgICA8Q1guMT4kezIxX3Zpc2l0X2lkfTwvQ1guMT4KICAgIDwvUFYxLjE5
PgogICAgPFBWMS4zNj4kezMwX2Rpc2NoYXJnZV9kaXNwb3NpdGlvbn08L1BWMS4zNj4KICAgIDxQ
VjEuNDQ+CiAgICAgIDxUUy4xPiR7MjJfdmlzaXRfZGF0ZV90aW1lfTwvVFMuMT4KICAgIDwvUFYx
LjQ0PgogICAgPFBWMS40NT4KICAgICAgPFRTLjE+JHszMV9kaXNwb3NpdGlvbl9kYXRlX3RpbWV9
PC9UUy4xPgogICAgPC9QVjEuNDU+CiAgPC9QVjE+CiAgPE9CWD4KICAgIDxPQlguMT4xPC9PQlgu
MT4KICAgIDxPQlguMj5BRDwvT0JYLjI+CiAgICA8T0JYLjM+CiAgICAgIDxDRS4xPlNTMDAxPC9D
RS4xPgogICAgICA8Q0UuMj5UcmVhdGluZyBGYWNpbGl0eSBJZGVudGlmaWVyPC9DRS4yPgogICAg
ICA8Q0UuMz5QSElOUVVFU1RJT048L0NFLjM+CiAgICA8L09CWC4zPgogICAgPE9CWC4xMT5DPC9P
QlguMTE+CiAgICA8T0JYLjE1PgogICAgICA8Q0UuMT4kezFfZmFjaWxpdHlfaWRlbnRpZmllcn08
L0NFLjE+CiAgICA8L09CWC4xNT4KICA8L09CWD4KICA8T0JYPgogICAgPE9CWC4xPjI8L09CWC4x
PgogICAgPE9CWC4yPkhEPC9PQlguMj4KICAgIDxPQlguMz4KICAgICAgPENFLjE+U1MwMDE8L0NF
LjE+CiAgICAgIDxDRS4yPlRyZWF0aW5nIEZhY2lsaXR5IElkZW50aWZpZXI8L0NFLjI+CiAgICAg
IDxDRS4zPlBISU5RVUVTVElPTjwvQ0UuMz4KICAgIDwvT0JYLjM+CiAgICA8T0JYLjU+JHsyX2Zh
Y2lsaXR5X25hbWV9PC9PQlguNT4KICAgIDxPQlguMTE+WDwvT0JYLjExPgogIDwvT0JYPgogIDxP
Qlg+CiAgICA8T0JYLjE+MzwvT0JYLjE+CiAgICA8T0JYLjI+WEFEPC9PQlguMj4KICAgIDxPQlgu
Mz4KICAgICAgPENFLjE+U1MwMDI8L0NFLjE+CiAgICAgIDxDRS4yPlRyZWF0aW5nIEZhY2lsaXR5
IExvY2F0aW9uPC9DRS4yPgogICAgPC9PQlguMz4KICAgIDxPQlguNT5eJHszX2ZhY2lsaXR5X251
bWJlcl9hbmRfc3RyZWV0fV5eXl4kezRfZmFjaWxpdHlfY2l0eX1eJHs2X2ZhY2lsaXR5X3N0YXRl
fV4zMDM0MV5VU0FeQ15eJHs1X2ZhY2lsaXR5X2NvdW50eX08L09CWC41PgogICAgPE9CWC4xMT5Y
PC9PQlguMTE+CiAgPC9PQlg+CiAgPE9CWD4KICAgIDxPQlguMT40PC9PQlguMT4KICAgIDxPQlgu
Mj5DV0U8L09CWC4yPgogICAgPE9CWC4zPgogICAgICA8Q0UuMT5TUzAwMzwvQ0UuMT4KICAgICAg
PENFLjI+RmFjaWxpdHkvVmlzaXQgVHlwZTwvQ0UuMj4KICAgICAgPENFLjM+UEhJTlFVRVNUSU9O
PC9DRS4zPgogICAgPC9PQlguMz4KICAgIDxPQlguNT4kezdfZmFjaWxpdHlfdmlzaXRfdHlwZX08
L09CWC41PgogICAgPE9CWC4xMj4KICAgICAgPFRTLjE+WDwvVFMuMT4KICAgIDwvT0JYLjEyPgog
IDwvT0JYPgogIDxPQlg+CiAgICA8T0JYLjE+NTwvT0JYLjE+CiAgICA8T0JYLjI+Tk08L09CWC4y
PgogICAgPE9CWC4zPgogICAgICA8Q0UuMT4yMTYxMi03PC9DRS4xPgogICAgICA8Q0UuMj5BR0Ug
VElNRSBQQUlURU5UIFJFUE9SVEVEPC9DRS4yPgogICAgICA8Q0UuMz5MTjwvQ0UuMz4KICAgIDwv
T0JYLjM+CiAgICA8T0JYLjU+JHsxMV9hZ2V9PC9PQlguNT4KICAgIDxPQlguNj4KICAgICAgPENF
LjE+YTwvQ0UuMT4KICAgICAgPENFLjI+JHsxMl9hZ2VfdW5pdHN9PC9DRS4yPgogICAgICA8Q0Uu
Mz5VQ1VNPC9DRS4zPgogICAgPC9PQlguNj4KICAgIDxPQlguMTE+WDwvT0JYLjExPgogIDwvT0JY
PgogIDxPQlg+CiAgICA8T0JYLjE+NjwvT0JYLjE+CiAgICA8T0JYLjI+VFM8L09CWC4yPgogICAg
PE9CWC4zPgogICAgICA8Q0UuMT4xMTM2OC04PC9DRS4xPgogICAgICA8Q0UuMj5JTExORVNTIE9S
IElOSlVSWSBPTlNFVCBEQVRFIEFORCBUSU1FOlRNU1RQOlBUOlBBSVRFTlQ6UU48L0NFLjI+CiAg
ICAgIDxDRS4zPkxOPC9DRS4zPgogICAgPC9PQlguMz4KICAgIDxPQlguNT4kezIzX2RhdGVfb2Zf
b25zZXR9PC9PQlguNT4KICAgIDxPQlguMTE+WDwvT0JYLjExPgogIDwvT0JYPgogIDxPQlg+CiAg
ICA8T0JYLjE+NzwvT0JYLjE+CiAgICA8T0JYLjI+Q1dFPC9PQlguMj4KICAgIDxPQlguMz4KICAg
ICAgPENFLjE+ODY2MS0xPC9DRS4xPgogICAgICA8Q0UuMj5DSElFRiBDT01QTEFJTlQ6RklORDpQ
VDpQQUlURU5UOk5PTTpSRVBPUlRFRDwvQ0UuMj4KICAgICAgPENFLjM+TE48L0NFLjM+CiAgICA8
L09CWC4zPgogICAgPE9CWC41Pl5eXl5eXl5eJHsyNV9jaGllZl9jb21wbGFpbnR9PC9PQlguNT4K
ICAgIDxPQlguMTE+WDwvT0JYLjExPgogIDwvT0JYPgogIDxPQlg+CiAgICA8T0JYLjE+ODwvT0JY
LjE+CiAgICA8T0JYLjI+VFg8L09CWC4yPgogICAgPE9CWC4zPgogICAgICA8Q0UuMT41NDA5NC04
PC9DRS4xPgogICAgICA8Q0UuMj5UUklBR0UgTk9URTpGSU5EOlBUOkVNRVJHRU5DWSBERVBBUlRN
RU5UOkRPQzwvQ0UuMj4KICAgICAgPENFLjM+TE48L0NFLjM+CiAgICA8L09CWC4zPgogICAgPE9C
WC41PiR7MjZfdHJpYWdlX25vdGVzfTwvT0JYLjU+CiAgICA8T0JYLjExPlg8L09CWC4xMT4KICA8
L09CWD4KICA8T0JYPgogICAgPE9CWC4xPjk8L09CWC4xPgogICAgPE9CWC4yPlRYPC9PQlguMj4K
ICAgIDxPQlguMz4KICAgICAgPENFLjE+NDQ4MzMtMjwvQ0UuMT4KICAgICAgPENFLjI+RElBR05P
U0lTOlBSRUxJTUlOQVJZOklNUDpQVDpQQUlURU5UOk5PTTo8L0NFLjI+CiAgICAgIDxDRS4zPkxO
PC9DRS4zPgogICAgPC9PQlguMz4KICAgIDxPQlguNT4kezI4X2NsaW5pY2FsX2ltcHJlc3Npb259
PC9PQlguNT4KICAgIDxPQlguMTE+WDwvT0JYLjExPgogIDwvT0JYPgogIDxPQlg+CiAgICA8T0JY
LjE+MTA8L09CWC4xPgogICAgPE9CWC4yPk5NPC9PQlguMj4KICAgIDxPQlguMz4KICAgICAgPENF
LjE+MTEyODktNjwvQ0UuMT4KICAgICAgPENFLjI+Qk9EWSBURU1QRVJBVFVSRTpURU1QOkVOQ1RS
RklSU1Q6UEFJVEVOVDpRTjwvQ0UuMj4KICAgICAgPENFLjM+TE48L0NFLjM+CiAgICA8L09CWC4z
PgogICAgPE9CWC41PiR7MzJfaW5pdGlhbF90ZW1wZXJhdHVyZX08L09CWC41PgogICAgPE9CWC42
PgogICAgICA8Q0UuMj4ke3h4X3RlbXBlcmF0dXJlX3VuaXRzfTwvQ0UuMj4KICAgICAgPENFLjM+
VUNVTTwvQ0UuMz4KICAgIDwvT0JYLjY+CiAgICA8T0JYLjExPlg8L09CWC4xMT4KICA8L09CWD4K
ICA8T0JYPgogICAgPE9CWC4xPjExPC9PQlguMT4KICAgIDxPQlguMj5OTTwvT0JYLjI+CiAgICA8
T0JYLjM+CiAgICAgIDxDRS4xPjU5NDA4LTU8L0NFLjE+CiAgICAgIDxDRS4yPk9YWUdFTiBTQVRV
UkFUSU9OOk1GUjpQVDpCTERBOlFOOlBVTFNFIE9YSU1FVFJZPC9DRS4yPgogICAgICA8Q0UuMz5M
TjwvQ0UuMz4KICAgIDwvT0JYLjM+CiAgICA8T0JYLjU+JHszM19wdWxzZV9veGltZXRyeX08L09C
WC41PgogICAgPE9CWC42PgogICAgICA8Q0UuMj4ke3h4X3B1bHNlX294aW1ldHJ5X3VuaXRzfTwv
Q0UuMj4KICAgIDwvT0JYLjY+CiAgICA8T0JYLjExPlg8L09CWC4xMT4KICA8L09CWD4KICA8REcx
PgogICAgPERHMS4xPjE8L0RHMS4xPgogICAgPERHMS4zPgogICAgICA8Q0UuMj4kezI3X2RpYWdu
b2lzaXNfaW5qdXJ5X2NvZGV9PC9DRS4yPgogICAgPC9ERzEuMz4KICAgIDxERzEuNj4kezI5X2Rp
YWdub3Npc190eXBlfTwvREcxLjY+CiAgPC9ERzE+CjwvQURUX0EwMT4K</outboundTemplate>
      <inboundProtocol>DELIMITED</inboundProtocol>
      <outboundProtocol>XML</outboundProtocol>
      <inboundProperties>
        <property name="batchGroupingColumn"></property>
        <property name="batchMessageDelimiter"></property>
        <property name="batchMessageDelimiterIncluded">false</property>
        <property name="batchScript"></property>
        <property name="batchSkipRecords">0</property>
        <property name="batchSplitByRecord">false</property>
        <property name="columnDelimiter">;</property>
        <property name="columnNames"></property>
        <property name="columnWidths"></property>
        <property name="escapeWithDoubleQuote">true</property>
        <property name="ignoreCR">true</property>
        <property name="numberedRows">false</property>
        <property name="quoteChar"></property>
        <property name="quoteEscapeChar">\</property>
        <property name="recordDelimiter"></property>
      </inboundProperties>
      <outboundProperties>
        <property name="stripNamespaces">true</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>File Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.1.1.5490</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Destination 1</name>
      <properties>
        <property name="DataType">Channel Writer</property>
        <property name="host">sink</property>
        <property name="synchronised">0</property>
        <property name="template">${message.transformedData}</property>
      </properties>
      <transformer>
        <steps/>
        <inboundTemplate encoding="base64"></inboundTemplate>
        <outboundTemplate encoding="base64"></outboundTemplate>
        <inboundProtocol>XML</inboundProtocol>
        <outboundProtocol>HL7V2</outboundProtocol>
        <inboundProperties>
          <property name="stripNamespaces">true</property>
        </inboundProperties>
        <outboundProperties>
          <property name="convertLFtoCR">true</property>
          <property name="handleRepetitions">false</property>
          <property name="handleSubcomponents">false</property>
          <property name="stripNamespaces">true</property>
          <property name="useStrictParser">false</property>
          <property name="useStrictValidation">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>Channel Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.1.1.5490</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
importPackage(Packages.java.util);
importPackage(Packages.java.io);


	var value = java.lang.System.getenv(&apos;SCHIEPPH_PROPERTIES_DIR&apos;);
	var property_file = &apos;&apos;;

	if (value == null)
	{
		//no enviroment variable, default to Mirth Properties directory. 
		property_file = &apos;conf/DelimitedFileSource.properties&apos;;
	}
	else
	{
		property_file = value + &apos;/DelimitedFileSource.properties&apos;;
	}


try {
	var properties = new Properties();
	properties.load(new java.io.FileInputStream(property_file));


	for (iterator = properties.entrySet().iterator(); iterator.hasNext();) {
		var entry = iterator.next();
		globalMap.put(entry.getKey(), entry.getValue());
		logger.info(&apos;key = &apos; + entry.getKey());
	}

	logger.info(&apos;Successfully loaded &apos; + property_file);

} catch (e) {
	logger.error(e);
}



return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>