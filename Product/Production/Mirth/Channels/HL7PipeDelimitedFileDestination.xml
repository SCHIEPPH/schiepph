<channel>
  <id>dc89620c-0db2-40a3-a26f-314e0c5af4b9</id>
  <name>HL7PipeDelimitedFileDestination</name>
  <description></description>
  <enabled>true</enabled>
  <version>2.2.1.5861</version>
  <lastModified>
    <time>1345818589886</time>
    <timezone>America/New_York</timezone>
  </lastModified>
  <revision>4</revision>
  <sourceConnector>
    <name>sourceConnector</name>
    <properties>
      <property name="DataType">Channel Reader</property>
      <property name="responseValue">None</property>
    </properties>
    <transformer>
      <steps>
        <step>
          <sequenceNumber>0</sequenceNumber>
          <name>Get_hl7_message_id</name>
          <script>var validator = new Packages.org.cophm.validation.HL7Validator(null, null, &apos;SyndromicDataValidations.xml&apos;);

validator.loadData(msg);

globalChannelMap.put(&apos;hl7_message_id&apos;, validator.getMessageId());</script>
          <type>JavaScript</type>
          <data class="map">
            <entry>
              <string>Script</string>
              <string>var validator = new Packages.org.cophm.validation.HL7Validator(null, null, &apos;SyndromicDataValidations.xml&apos;);

validator.loadData(msg);

globalChannelMap.put(&apos;hl7_message_id&apos;, validator.getMessageId());</string>
            </entry>
          </data>
        </step>
      </steps>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundProtocol>XML</inboundProtocol>
      <outboundProtocol>HL7V2</outboundProtocol>
      <inboundProperties>
        <property name="stripNamespaces">false</property>
      </inboundProperties>
      <outboundProperties>
        <property name="convertLFtoCR">false</property>
        <property name="handleRepetitions">false</property>
        <property name="handleSubcomponents">false</property>
        <property name="stripNamespaces">true</property>
        <property name="useStrictParser">false</property>
        <property name="useStrictValidation">false</property>
      </outboundProperties>
    </transformer>
    <filter>
      <rules/>
    </filter>
    <transportName>Channel Reader</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <version>2.2.1.5861</version>
  </sourceConnector>
  <destinationConnectors>
    <connector>
      <name>Destination 1</name>
      <properties>
        <property name="DataType">File Writer</property>
        <property name="FTPAnonymous">1</property>
        <property name="binary">0</property>
        <property name="charsetEncoding">DEFAULT_ENCODING</property>
        <property name="errorOnExists">0</property>
        <property name="host">${hl7_pipe_delimited_file_dest_output_dir}</property>
        <property name="outputAppend">0</property>
        <property name="outputPattern">${hl7_pipe_delimited_file_dest_name_prefix}${hl7_message_id}_${date.get(&apos;yyyy-M-d_H.m.s&apos;)}.hl7</property>
        <property name="passive">1</property>
        <property name="password">anonymous</property>
        <property name="scheme">file</property>
        <property name="secure">1</property>
        <property name="template">${message.encodedData}</property>
        <property name="temporary">0</property>
        <property name="timeout">10000</property>
        <property name="username">anonymous</property>
        <property name="validateConnections">1</property>
      </properties>
      <transformer>
        <steps/>
        <inboundProtocol>HL7V2</inboundProtocol>
        <outboundProtocol>HL7V2</outboundProtocol>
        <inboundProperties>
          <property name="convertLFtoCR">false</property>
          <property name="handleRepetitions">false</property>
          <property name="handleSubcomponents">false</property>
          <property name="stripNamespaces">true</property>
          <property name="useStrictParser">false</property>
          <property name="useStrictValidation">false</property>
        </inboundProperties>
        <outboundProperties>
          <property name="convertLFtoCR">false</property>
          <property name="handleRepetitions">false</property>
          <property name="handleSubcomponents">false</property>
          <property name="stripNamespaces">true</property>
          <property name="useStrictParser">false</property>
          <property name="useStrictValidation">false</property>
        </outboundProperties>
      </transformer>
      <filter>
        <rules/>
      </filter>
      <transportName>File Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <version>2.2.1.5861</version>
    </connector>
  </destinationConnectors>
  <properties>
    <property name="clearGlobalChannelMap">true</property>
    <property name="dont_store_filtered">false</property>
    <property name="encryptData">false</property>
    <property name="error_messages_only">false</property>
    <property name="initialState">started</property>
    <property name="max_message_age">-1</property>
    <property name="store_messages">true</property>
    <property name="synchronous">true</property>
    <property name="transactional">false</property>
  </properties>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
return;</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
importPackage(Packages.java.util);
importPackage(Packages.java.io);


	var value = java.lang.System.getenv(&apos;SCHIEPPH_PROPERTIES_DIR&apos;);
	var property_file = &apos;&apos;;

	if (value == null)
	{
		//no enviroment variable, default to Mirth Properties directory. 
		property_file = &apos;conf/HL7PipeDelimitedFileDestination.properties&apos;;
	}
	else
	{
		property_file = value + &apos;/HL7PipeDelimitedFileDestination.properties&apos;;
	}


try {
	var properties = new Properties();
	properties.load(new java.io.FileInputStream(property_file));


	for (iterator = properties.entrySet().iterator(); iterator.hasNext();) {
		var entry = iterator.next();
		globalMap.put(entry.getKey(), entry.getValue());
		logger.info(entry.getKey() + &quot; = &quot; +  entry.getValue());
	}

	logger.info(&apos;Successfully loaded &apos; + property_file);
} catch (e) {
	logger.error(e);
}



return;</deployScript>
  <shutdownScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</shutdownScript>
</channel>